name: brew pr-pull
on:
  pull_request_target:
    types:
      - labeled
jobs:
  pr-pull:
    permissions:
      contents: write
    if: contains(github.event.pull_request.labels.*.name, 'pr-pull')
    runs-on: ubuntu-22.04
    env:
      HOMEBREW_NO_INSTALL_FROM_API: 1
    steps:
      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master
        with:
          token: ${{ github.token }}

      - name: Cache Homebrew Bundler RubyGems
        id: cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.set-up-homebrew.outputs.gems-path }}
          key: ${{ runner.os }}-rubygems-${{ steps.set-up-homebrew.outputs.gems-hash }}
          restore-keys: ${{ runner.os }}-rubygems-

      - name: Install Homebrew Bundler RubyGems
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        run: brew install-bundler-gems

      - name: Set up git
        uses: Homebrew/actions/git-user-config@master

      - name: Checkout PR branch
        run: git checkout ${{ github.head_ref }}

      - name: Pull bottles
        id: pr-pull
        env:
          HOMEBREW_GITHUB_API_TOKEN: ${{ github.token }}
          PULL_REQUEST: ${{ github.event.pull_request.number }}
        run: brew pr-pull --debug --no-upload --retain-bottle-dir --root-url=https://get-test.ecmwf.int/repository/homebrew --tap=$GITHUB_REPOSITORY $PULL_REQUEST

      - name: Unzip artifacts and apply bottle commit
        run: |
          cd ${{ steps.pr-pull.outputs.bottle_path }}
          unzip '*.zip' '*.json'
          brew bottle --merge --write --debug --root-url=https://get-test.ecmwf.int/repository/homebrew *.json

      - name: Push bottle commit
        run: git push origin ${{ github.head_ref }}

        # brew creates bottles with a different name than what should be uploaded
        # when installing it's searching for file with the new name
      - name: Rename bottles
        shell: python
        run: |
          import os
          import json

          def rename(data):
            key1 = next(iter(data))
            key2 = next(iter(data[key1]["bottle"]["tags"]))
            obj = data[key1]["bottle"]["tags"][key2]
            filename = obj["filename"]
            local_filename = obj["local_filename"]
            os.rename(local_filename, filename)

          for filename in os.listdir("."):
            if filename.endswith(".json"):
              with open(filename, "r") as json_file:
                data = json.load(json_file)
                rename(data)

      - name: Upload bottles
        run: |
          for file in *.bottle.tar.gz; do
            if [ -f "$file" ]; then
              echo "Uploading: $file"
              response=$(curl -w "%{http_code}" --user "${{ secrets.NEXUS_PUBLIC_TEST_REPO_UPLOAD_TOKEN }}" --upload-file $file https://get-test.ecmwf.int/repository/homebrew/$file)
              
              status=$(echo $response | tail -c 4)
              if [ $status -eq 201 ] || [ $status -eq 200 ]; then
                echo "Successfully uploaded!"
              else
                echo "$status: Upload failed"
                exit 1
              fi
            fi
          done
