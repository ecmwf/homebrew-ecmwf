name: brew test-bot
on:
  push:
    branches:
      - master
  pull_request:
jobs:
  test-bot:
    strategy:
      matrix:
        name:
          - ubuntu-latest
          - macos-13-arm
          - macos-13-x86
        include:
          - name: ubuntu-latest
            labels: [ubuntu-latest]
          - name: macos-13-arm
            labels: [self-hosted, platform-builder-macosx-13.4.1-arm64]
          - name: macos-13-x86
            labels: [self-hosted, platform-builder-macosx-13.4.1-x86_64]
    runs-on: ${{ matrix.labels }}
    env:
      HOMEBREW_NO_INSTALL_FROM_API: 1
    steps:
      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Cache Homebrew Bundler RubyGems
        id: cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.set-up-homebrew.outputs.gems-path }}
          key: ${{ runner.os }}-rubygems-${{ steps.set-up-homebrew.outputs.gems-hash }}
          restore-keys: ${{ runner.os }}-rubygems-

      - name: Install Homebrew Bundler RubyGems
        if: steps.cache.outputs.cache-hit != 'true'
        run: brew install-bundler-gems

      - name: Run homebrew cleanup
        run: brew test-bot --only-cleanup-before

      - name: Run the local system setup check
        run: brew test-bot --only-setup

      - name: Run syntax check
        run: brew test-bot --only-tap-syntax

      - name: Build bottles
        if: github.event_name == 'pull_request'
        run: brew test-bot --only-formulae --fail-fast --skip-recursive-dependents

      - name: Upload bottles as artifact
        if: always() && github.event_name == 'pull_request'
        uses: actions/upload-artifact@main
        with:
          name: bottles
          path: '*.bottle.*'
